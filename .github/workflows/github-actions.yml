name: Flutter CI

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches:
    - master
    
# on: push    # Default will running for every branch.

    
jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:
    # Setup Java environment in order to build the Android app.
    - uses: actions/checkout@v1

    - name: Install strace
      run: sudo apt-get update && sudo apt-get install -y strace

    - name: Enable strace
      uses: clonedSemicolon/setup-strace@v3

    - name: Check which bash is used
      run: which bash

    - name: Run CI logic
      run: echo "This should be traced"

    # - name: Try manual strace
      # run: |
        # echo "Trying direct strace..."
        # mkdir -p strace_logs
        # strace -tt -f -o strace_logs/manual.log bash -c "echo traced manually"
        # cat strace_logs/manual.log || echo "‚ùå strace failed (manual test)"

    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'

    - name: List logs
      run: |
        echo "üìù Strace Logs:"
        find strace_logs -type f

    - name: Upload logs
      uses: actions/upload-artifact@v4
      with:
        name: strace-logs
        path: strace_logs/
    
    # Setup the flutter environment.
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable' # 'dev', 'alpha', default to: 'stable'
        flutter-version: '2.0.1' # you can also specify exact version of flutter
    
    # Get flutter dependencies.
    - run: flutter pub get
    
    # Check for any formatting issues in the code.
    - run: flutter format --set-exit-if-changed .

    - name: List strace logs
      run: ls -l strace-logs || echo "No logs found"

    - name: Upload strace artifacts
      uses: actions/upload-artifact@v4
      with:
        name: strace-logs
        path: strace_logs/
    
#     # Run widget tests for our flutter project.
#     - run: flutter test
    
#     # Build apk.
#     - run: flutter build apk
    
    # Upload generated apk to the artifacts.
  #  - uses: actions/upload-artifact@v1
    #  with:
      #  name: release-apk
       # path: build/app/outputs/apk/release/app-release.apk
